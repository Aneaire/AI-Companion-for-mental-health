/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as QualityAnalysisImport } from './routes/quality-analysis'
import { Route as PodcastImport } from './routes/podcast'
import { Route as PersonaLibraryImport } from './routes/persona-library'
import { Route as ImpersonateImport } from './routes/impersonate'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin.index'

// Create/Update Routes

const QualityAnalysisRoute = QualityAnalysisImport.update({
  id: '/quality-analysis',
  path: '/quality-analysis',
  getParentRoute: () => rootRoute,
} as any)

const PodcastRoute = PodcastImport.update({
  id: '/podcast',
  path: '/podcast',
  getParentRoute: () => rootRoute,
} as any)

const PersonaLibraryRoute = PersonaLibraryImport.update({
  id: '/persona-library',
  path: '/persona-library',
  getParentRoute: () => rootRoute,
} as any)

const ImpersonateRoute = ImpersonateImport.update({
  id: '/impersonate',
  path: '/impersonate',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/impersonate': {
      id: '/impersonate'
      path: '/impersonate'
      fullPath: '/impersonate'
      preLoaderRoute: typeof ImpersonateImport
      parentRoute: typeof rootRoute
    }
    '/persona-library': {
      id: '/persona-library'
      path: '/persona-library'
      fullPath: '/persona-library'
      preLoaderRoute: typeof PersonaLibraryImport
      parentRoute: typeof rootRoute
    }
    '/podcast': {
      id: '/podcast'
      path: '/podcast'
      fullPath: '/podcast'
      preLoaderRoute: typeof PodcastImport
      parentRoute: typeof rootRoute
    }
    '/quality-analysis': {
      id: '/quality-analysis'
      path: '/quality-analysis'
      fullPath: '/quality-analysis'
      preLoaderRoute: typeof QualityAnalysisImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/impersonate': typeof ImpersonateRoute
  '/persona-library': typeof PersonaLibraryRoute
  '/podcast': typeof PodcastRoute
  '/quality-analysis': typeof QualityAnalysisRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/impersonate': typeof ImpersonateRoute
  '/persona-library': typeof PersonaLibraryRoute
  '/podcast': typeof PodcastRoute
  '/quality-analysis': typeof QualityAnalysisRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/impersonate': typeof ImpersonateRoute
  '/persona-library': typeof PersonaLibraryRoute
  '/podcast': typeof PodcastRoute
  '/quality-analysis': typeof QualityAnalysisRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/impersonate'
    | '/persona-library'
    | '/podcast'
    | '/quality-analysis'
    | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/impersonate'
    | '/persona-library'
    | '/podcast'
    | '/quality-analysis'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/impersonate'
    | '/persona-library'
    | '/podcast'
    | '/quality-analysis'
    | '/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ImpersonateRoute: typeof ImpersonateRoute
  PersonaLibraryRoute: typeof PersonaLibraryRoute
  PodcastRoute: typeof PodcastRoute
  QualityAnalysisRoute: typeof QualityAnalysisRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ImpersonateRoute: ImpersonateRoute,
  PersonaLibraryRoute: PersonaLibraryRoute,
  PodcastRoute: PodcastRoute,
  QualityAnalysisRoute: QualityAnalysisRoute,
  AdminIndexRoute: AdminIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/impersonate",
        "/persona-library",
        "/podcast",
        "/quality-analysis",
        "/admin/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/impersonate": {
      "filePath": "impersonate.tsx"
    },
    "/persona-library": {
      "filePath": "persona-library.tsx"
    },
    "/podcast": {
      "filePath": "podcast.tsx"
    },
    "/quality-analysis": {
      "filePath": "quality-analysis.tsx"
    },
    "/admin/": {
      "filePath": "admin.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
